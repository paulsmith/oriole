# macros
int_if = "{ em1 em2 em3 }"
tcp_services = "{ 22 }"
udp_services = "{ isakmp, ipsec-nat-t }"
icmp_types = "{ echoreq, unreach }"
openvpn_port = "1194"
bunny = "192.168.1.5"
switch = "192.168.1.8"

# options
set block-policy drop
set loginterface egress
set skip on lo

# match rules
match in all scrub (no-df random-id max-mss 1440)
match out on egress inet from !$switch to any nat-to (egress:0) port 1024:65535
match out on egress inet from  $switch to any nat-to (egress:0) static-port

# tables
table <martians> { 0.0.0.0/8 10.0.0.0/8 127.0.0.0/8 169.254.0.0/16     \
	 	   172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 224.0.0.0/3 \
	 	   192.168.0.0/16 198.18.0.0/15 198.51.100.0/24        \
	 	   203.0.113.0/24 }
table <badhosts> persist file "/etc/badssh"

# queue with FQ-CoDel as queue manager (combat bufferbloat)
queue outq on em0 flows 1024 bandwidth 10M max 10M qlimit 1024 default
queue inq on em1 flows 1024 bandwidth 140M max 140M qlimit 1024 default

# filter rules
antispoof quick for egress
block in quick on egress from { <badhosts>, <martians> } to any
block return out quick on egress from any to <martians>
block log all
pass out quick inet
#pass out on egress proto { udp, tcp, icmp } from any to any modulate state
#pass out on $int_if inet proto { udp, tcp, icmp } from 192.168.1.1 to 192.168.1.0/24
pass in inet proto icmp all icmp-type $icmp_types
pass in on $int_if inet proto { tcp udp } all
pass in on egress inet proto tcp from any to (egress) port $tcp_services
pass in on egress inet proto udp from any to (egress) port $udp_services
# OpenVPN on bunny
pass in on egress inet proto udp from any to (egress) port $openvpn_port rdr-to $bunny
